# Aquarius - Automation Simplified
#
# @brief Git script for exporting PCB data for Power Module
# @note only runs when files are checked in
# @date 5/16/25
# @author cyberreefguru
# (c) CRG Makes 2025
name: Aquarius-Power-Module-Checkin-CI
on:
  release:
    types: [published]
  push:
    paths:
      # - 'pcb/power-module.kicad_sch'
      - 'pcb/power-module.kicad_pcb'
      - '.github/workflows/power-module-checkin.yaml'
  workflow_dispatch:
    
jobs:
  export-ecad:
    name: Export ECAD
    runs-on: ubuntu-latest
    container: ghcr.io/inti-cmnb/kicad9_auto_full:latest
      
    steps:
    - name: Update system
      run: |
        echo "Working Directory $(pwd)"
        apt update
        apt -y install git zip

    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        path: working/module-power

    - name: Checkout Extras
      uses: actions/checkout@v4
      with:
        repository: crgmakes/kicad-extras
        path: working/kicad-extras

    - name: Checkout CRGM Library
      uses: actions/checkout@v4
      with:
        repository: crgmakes/kicad-library
        path: working/kicad-library

    - name: Checkout PcbDraw Library
      uses: actions/checkout@v4
      with:
        repository: yaqwsx/PcbDraw-Lib
        path: working/PcbDraw-Lib

    - name: Checkout Fab Kit Library
      uses: actions/checkout@v4
      with:
        repository: bennymeg/Fabrication-Toolkit
        path: working/Fabrication-Toolkit

    - name: Update fonts
      run: |
        mkdir -p /usr/share/fonts/
        cp working/kicad-extras/fonts/* /usr/share/fonts/
        fc-cache -f -v

    - name: Update the PCB with git hash
      run: |
        cd working/module-power
        export COMMIT=$(git rev-parse --short HEAD)
        echo "COMMIT = ${COMMIT}"    
        echo "ref: ${{ github.ref }}"
        echo "default: ${{ env.default }}"
        cd pcb
        sed -i "s!<<hash>>!${COMMIT}!" power-module.kicad_pcb

    - name: Generate Single PCB Fabrication Files
      run: |
        echo "Working Directory: ${{ github.workspace }}"
        cd working/module-power/
        kibot -c ../kicad-extras/kibot/crgm.kibot.yaml -e pcb/power-module.kicad_sch -b pcb/power-module.kicad_pcb -d production create_pcb_archive_4layer
        #kibot -c ../kicad-extras/kibot/crgm.kibot.yaml -e pcb/power-module.kicad_sch -b pcb/power-module.kicad_pcb -d production create_release_archive_4layer
        # production now contains power-module.zip
        # ls -AlF production
        # ls -AlF ${{ github.workspace }}/working/module-power/production

    - name: Generate Release Fabrication Files
      if: github.event_name == 'release'
      run: |
        echo "Working Directory: ${{ github.workspace }}"
        cd working/module-power/
        kibot -c ../kicad-extras/kibot/crgm.kibot.yaml -e pcb/power-module.kicad_sch -b pcb/power-module.kicad_pcb -d production create_release_archive_4layer
        # production now contains power-module-release.zip
        cp production/power-module-release.zip ./power-module-release-${{ github.event.release.tag_name }}.zip

    - name: Generate PCB Panel for Release
      if: github.event_name == 'release'
      run: |
        cd working/module-power/pcb/panel
        rm -rf production
        kibot -c ../../../kicad-extras/kibot/crgm.kibot.yaml -e ../power-module.kicad_sch -b ../power-module.kicad_pcb -d pcb create_panel
        # pcb now contains power-module-panel.kicad_pcb
        kibot -c ../../../kicad-extras/kibot/crgm.kibot.yaml -e ../power-module.kicad_sch -b pcb/power-module-panel.kicad_pcb -d production create_panel_archive_4layer
        # produciton now contains power-module-panel.zip
        mv production/power-module-panel.zip .
        # add panelized PCB to archive
        zip -u power-module-panel.zip pcb/**
        mv power-module-panel.zip power-module-panel-release-${{ github.event.release.tag_name }}.zip
        # working/module-power/pcb/panel now contains power-module-panel-release-${{ github.event.release.tag_name }}.zip

    - name: Upload PCB Artifacts
      if: github.event_name != 'release'
      uses: actions/upload-artifact@v4
      with:
        name: aquarius-power-module-pcb
        path: |
          working/module-power/production/power-module.zip
        if-no-files-found: warn
        retention-days: 30

    - name: Upload Release Artifacts
      if: github.event_name == 'release'
      uses: actions/upload-artifact@v4
      with:
        name: aquarius-power-module-${{ github.event.release.tag_name }}
        path: |
          working/module-power/power-module-release-${{ github.event.release.tag_name }}.zip
          working/module-power/pcb/panel/power-module-panel-release-${{ github.event.release.tag_name }}.zip
        if-no-files-found: warn
        retention-days: 30

    - name: Upload files to release area
      uses: softprops/action-gh-release@v1
      if: github.event_name == 'release'
      with:
        name: aquarius-power-module-${{ github.event.release.tag_name }}
        files: |
          working/module-power/power-module-release-${{ github.event.release.tag_name }}.zip
          working/module-power/pcb/panel/power-module-panel-release-${{ github.event.release.tag_name }}.zip
